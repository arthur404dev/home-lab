version: "3.7"

### -> NETWORKS
networks:
  traefik_proxy:
    external: true
  traefik_internal:
    external: true
  nextcloud:
    driver: bridge
  default:
    driver: bridge

### -> EXTENSION FIELDS

# Keys common to isolated services/apps
x-common-keys-isolated:
  &common-keys-isolated
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

# Keys common to some of the dependent services/apps
x-common-keys-apps:
  &common-keys-apps
  networks:
    - traefik_proxy
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

### -> SERVICES
services:
  # -> Homarr - Main Dashboard for services
  homarr:
    <<: *common-keys-apps
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    volumes:
      - $DOCKERDIR/homarr/data/configs:/app/data/configs
      - $DOCKERDIR/homarr/data/icons:/app/public/icons
      - $DOCKERDIR/homarr/data/img:/app/public/img
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.homarr-rtr.entrypoints=https"
      - "traefik.http.routers.homarr-rtr.rule=Host(`home.$DOMAINNAME_CLOUD_SERVER`,`homarr.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.homarr-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.homarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.homarr-rtr.service=homarr-svc"
      - "traefik.http.services.homarr-svc.loadbalancer.server.port=7575"

  # -> Cloudflare Companion - Automatic CNAME DNS Creation
  cf-companion:
    <<: *common-keys-isolated
    container_name: cf-companion
    image: tiredofit/traefik-cloudflare-companion:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      TIMEZONE: $TZ
      TRAEFIK_VERSION: 2
      CF_EMAIL: $CLOUDFLARE_EMAIL # Same as traefik
      CF_TOKEN: $CLOUDFLARE_API_KEY # Same as traefik
      TARGET_DOMAIN: $DOMAINNAME_CLOUD_SERVER
      DOMAIN1: $DOMAINNAME_CLOUD_SERVER
      DOMAIN1_ZONE_ID: $CLOUDFLARE_ZONEID # Copy from Cloudflare Overview page
      DOMAIN1_PROXIED: TRUE
    labels:
      # Add hosts specified in rules here to force cf-companion to create the CNAMEs
      # Since cf-companion creates CNAMEs based on host rules, this a workaround for non-docker/external apps
      - "traefik.http.routers.cf-companion-rtr.rule=HostHeader(`pihole.$DOMAINNAME_CLOUD_SERVER`) || HostHeader(`proxmox.$DOMAINNAME_CLOUD_SERVER`) || HostHeader(`truenas.$DOMAINNAME_CLOUD_SERVER`)"
  # -> NextCloud - Personal Cloud
  nextcloud:
    <<: *common-keys-apps
    container_name: nextcloud
    image: nextcloud
    volumes:
      - $NFS_HDD/docker/nextcloud/data:/var/www/html/data
      - $DOCKERDIR/nextcloud/data/config:/var/www/html/config
      - $DOCKERDIR/nextcloud/data/custom_apps:/var/www/html/custom_apps
      - $DOCKERDIR/nextcloud/data/themes:/var/www/html/themes
    networks:
      - traefik_proxy
      - nextcloud
    links:
      - mariadb
    environment:
      MYSQL_USER: mariadb
      MYSQL_DATABASE: mariadb
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD_ROOT
      MYSQL_PASSWORD: mariadb
      MYSQL_HOST: mariadb
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.nextcloud-rtr.entrypoints=https"
      - "traefik.http.routers.nextcloud-rtr.rule=Host(`nextcloud.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.nextcloud-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.nextcloud-rtr.middlewares=chain-no-auth@file,nextcloud-dav"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.regex=^/.well-known/ca(l|rd)dav"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement=/remote.php/dav/"
      ## HTTP Services
      - "traefik.http.routers.nextcloud-rtr.service=nextcloud-svc"
      - "traefik.http.services.nextcloud-svc.loadbalancer.server.port=80"
  # -> Nextcloud Database - Using MariaDB, but can also use MySQL or PostgreSQL
  mariadb:
    <<: *common-keys-isolated
    container_name: mariadb
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    networks:
      - nextcloud
    volumes:
      - $DOCKERDIR/nextcloud/db:/var/lib/mysql
    environment:
      MYSQL_USER: mariadb
      MYSQL_DATABASE: mariadb
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD_ROOT
      MYSQL_PASSWORD: mariadb
  # -> Jellyfin - Mediaserver
  jellyfin:
    <<: *common-keys-isolated
    container_name: 'jellyfin'
    image: jellyfin/jellyfin
    user: $PUID:$PGID
    group_add:
      # by id as these may not exist within the container. Needed to provide permissions to the VAAPI Devices
      - '107' #render
      - '44' #video
    # Network mode of 'host' exposes the ports on the host. This is needed for DLNA access.
    network_mode: 'host'
    volumes:
      - $DOCKERDIR/jellyfin/config:/config
      - $DOCKERDIR/jellyfin/cache:/cache
      # Update this configuration as desired
      - $MEDIADIR/media:/media
    devices:
      # VAAPI Devices
      # - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jellyfin-rtr.entryPoints=https'
      - 'traefik.http.routers.jellyfin-rtr.rule=Host(`jellyfin.$DOMAINNAME_CLOUD_SERVER`)'
      - 'traefik.http.routers.jellyfin-rtr.tls=true'
      - 'traefik.http.routers.jellyfin-rtr.middlewares=jellyfin-mw'
      - 'traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
      - 'traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.SSLHost=jellyfin.$DOMAINNAME_CLOUD_SERVER'
      - 'traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000'
      - 'traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.browserXSSFilter=true'
      - "traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://$DOMAINNAME_CLOUD_SERVER'"
      - 'traefik.http.routers.jellyfin-rtr.service=jellyfin-svc@file'
      - 'traefik.http.services.jellyfin-svc.loadBalancer.server.port=8096'
      - 'traefik.http.services.jellyfin-svc.loadBalancer.passHostHeader=true'
      - 'traefik.http.routers.jellyfin-insecure-rtr.entryPoints=https'
      - 'traefik.http.routers.jellyfin-insecure-rtr.rule=Host(`jellyfin.$DOMAINNAME_CLOUD_SERVER`)'
      - 'traefik.http.routers.jellyfin-insecure-rtr.middlewares=jellyfin-insecure-mw'
      - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.port=9999'
      - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.permanent=false'
      - 'traefik.http.routers.jellyfin-insecure-rtr.service=noop@internal'
  # jDownloader - Download management
  jdownloader:
    <<: *common-keys-apps
    image: jlesage/jdownloader-2:latest
    container_name: jdownloader
    ports:
      - "$PORT_JDOWN:5800"
    volumes:
      - $MEDIADIR/downloads:/data/downloads
      - $DOCKERDIR/jdownloader:/config
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
      UMASK: 2
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      VNC_PASSWORD: $JDOWN_VNC_PASSWD
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jdownloader-rtr.entrypoints=https"
      - "traefik.http.routers.jdownloader-rtr.rule=Host(`jdown.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.jdownloader-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.jdownloader-rtr.service=jdownloader-svc"
      - "traefik.http.services.jdownloader-svc.loadbalancer.server.port=5800"

  # TransmissionBT - Torrent Downloader
  # ONLY ACCESSIBLE THROUGH https://domain.com/transmission/web/ if using PathPrefix
  # For Proxmox LXC Containers - https://pve.proxmox.com/wiki/OpenVPN_in_LXC
  transmission-vpn:
    image: haugene/transmission-openvpn:latest
    container_name: transmission-vpn
    restart: unless-stopped
    networks:
      traefik_proxy:
        ipv4_address: 192.168.90.169
    ports:
      - "$PORT_TRANS:9091"
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    # dns:
    #   - 1.1.1.1
    #   - 1.0.0.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DOCKERDIR/transmission-vpn/data:/data
      - $DOCKERDIR/transmission-vpn/config:/config
      - $MEDIADIR/downloads:/data/downloads
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
      OPENVPN_PROVIDER: NORDVPN
      OPENVPN_USERNAME: $NORD_USERNAME
      OPENVPN_PASSWORD: $NORD_PASSWORD
      NORDVPN_COUNTRY: BR
      NORDVPN_PROTOCOL: tcp
      NORDVPN_CATEGORY: legacy_p2p
      LOCAL_NETWORK: "$LOCAL_NETWORK"
      UMASK_SET: 2
      # These transmission settings are not needed as /data/transmission-home/settings.json is persistent
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
      TRANSMISSION_RPC_HOST_WHITELIST: "127.0.0.1,$SERVER_IP"
      TRANSMISSION_RPC_PASSWORD: $TRANSMISSION_RPC_PASSWORD
      TRANSMISSION_RPC_USERNAME: $TRANSMISSION_RPC_USERNAME
      TRANSMISSION_UMASK: 2
      TRANSMISSION_RATIO_LIMIT: 1.0
      TRANSMISSION_RATIO_LIMIT_ENABLED: "true"
      TRANSMISSION_ALT_SPEED_DOWN: 2000
      TRANSMISSION_ALT_SPEED_ENABLED: "false"
      TRANSMISSION_ALT_SPEED_UP: 100
      TRANSMISSION_SPEED_LIMIT_DOWN: 10000
      TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED: "true"
      TRANSMISSION_SPEED_LIMIT_UP: 500
      TRANSMISSION_SPEED_LIMIT_UP_ENABLED: "true"
      TRANSMISSION_INCOMPLETE_DIR: /data/downloads/torrents/incomplete
      TRANSMISSION_INCOMPLETE_DIR_ENABLED: "true"
      TRANSMISSION_WATCH_DIR: /data/downloads/torrents
      TRANSMISSION_WATCH_DIR_ENABLED: "true"
      TRANSMISSION_DOWNLOAD_DIR: /data/downloads/torrents
      LOG_TO_STDOUT: "true"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.transmission-vpn-rtr.entrypoints=https"
      - "traefik.http.routers.transmission-vpn-rtr.rule=Host(`trans.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.transmission-vpn-rtr.middlewares=middlewares-rate-limit@file"
      ## HTTP Services
      - "traefik.http.routers.transmission-vpn-rtr.service=transmission-vpn-svc"
      - "traefik.http.services.transmission-vpn-svc.loadbalancer.server.port=9091"
  # qBittorrent - Torrent downloader
  qbittorrent:
    <<: *common-keys-apps
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    #network_mode: container:transmission-vpn
    ports:
      - "$PORT_QBIT:8080"
    volumes:
      - $DOCKERDIR/qbittorrent/config:/config
      - $MEDIADIR/downloads:/data/downloads
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
      UMASK_SET: 2
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.qbittorrent-rtr.entrypoints=https"
      - "traefik.http.routers.qbittorrent-rtr.rule=Host(`qbit.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.qbittorrent-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.qbittorrent-rtr.service=qbittorrent-svc"
      - "traefik.http.services.qbittorrent-svc.loadbalancer.server.port=8080"

  # nzbget - Binary newsgrabber (NZB downloader)
  nzbget:
    <<: *common-keys-apps
    image: lscr.io/linuxserver/nzbget
    container_name: nzbget
    networks:
      traefik_proxy:
        ipv4_address: 192.168.90.216
    ports:
      - "$PORT_NZBGET:6789"
    volumes:
      - $DOCKERDIR/nzbget/config:/config
      - $MEDIADIR/downloads:/data/downloads
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.nzbget-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.nzbget-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.nzbget-rtr.entrypoints=https"
      - "traefik.http.routers.nzbget-rtr.rule=Host(`nzbget.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.nzbget-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.nzbget-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.nzbget-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.nzbget-rtr.service=nzbget-svc"
      - "traefik.http.routers.nzbget-rtr-bypass.service=nzbget-svc"
      - "traefik.http.services.nzbget-svc.loadbalancer.server.port=6789"
